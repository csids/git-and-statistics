[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Git and Statistics",
    "section": "",
    "text": "Git and Statistics"
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "Git and Statistics",
    "section": "License",
    "text": "License\n\nThis work, as a whole, is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.\nThe code contained in this book is simultaneously available under the MIT license."
  },
  {
    "objectID": "qmd/100-reference.html",
    "href": "qmd/100-reference.html",
    "title": "1  Reference",
    "section": "",
    "text": "Note\n\n\n\nThink of GitHub as a manual snapshot-oriented version of a cloud storage service (e.g. Box/Dropbox) that has been designed around collaborative coding.\n\n\n\nWorking directory\n\nThis is a folder on your local file system. It contains the files that you interact with (i.e. edit, read, and run).\n\nGit\n\nA distributed version control system, designed to handle collaborative coding projects. A program that is installed on your computer.\n\nGitHub\n\nA cloud-based hosting service that lets you manage Git repositories.\n\nCommit\n\nA snapshot of the files at one particular point in time.\n\nRepo/Repository\n\nA list of commits. Multiple files and their revision history.\n\nLocal repo\n\nThe list of commits on your computer. You can make changes to files, commit them, and then add these commits to your local repo.\n\nRemote repo\n\nThe centralized repository. Access controlled.\n\nBranch\n\nA parallel version of a repository. “main” is generally the default branch.\n\nPull\n\nFetch new commits from the remote repo and apply/merge them to your local repo.\n\nPush\n\nSend your commits to the remote repo.\n\nSSH Key\n\nA replacement for a username/password combination, in authenticating you to a server."
  },
  {
    "objectID": "qmd/200-git-concepts.html#why-gitgithub",
    "href": "qmd/200-git-concepts.html#why-gitgithub",
    "title": "2  Git Concepts",
    "section": "2.1 Why Git/GitHub?",
    "text": "2.1 Why Git/GitHub?\nGitHub repos are used to store the code/scripts for projects.\nWhy do we want to use GitHub instead of a traditional cloud storage service? Because it is specifically designed for collaborative coding. In more concrete terms, this means:\n\nIt allows us to easily collaborate on code together.\n\nTraditional cloud storage services push all changes instantaneously. This has a tendency to break code.\nGit has a manual push/pull system that is more appropriate for code.\n\nConflicts are handled in a well-defined manner that makes sense for code.\n\nTraditional cloud storage services do not handle this as well — they just save both files side-by-side.\n\nIt allows for the retrieval of earlier versions of code.\nCan easily check how each file/line of code has developed over time.\n\nTraditional cloud storage services have limited versioning options.\n\nIt provides a secure remote storage space for the code, in case of laptop theft/damage.\n\nSame as traditional cloud storage services.\n\nAccess rights can be centrally controlled on a per-project basis.\n\nIf working within a GitHub organization, then access rights should be given via teams."
  },
  {
    "objectID": "qmd/200-git-concepts.html#clone",
    "href": "qmd/200-git-concepts.html#clone",
    "title": "2  Git Concepts",
    "section": "2.2 Clone",
    "text": "2.2 Clone\nThe clone command is used to create a copy of a remote GitHub repo on your local computer (i.e. the initialization of the link between local and remote). This only has to happen once per repo/computer.\ngit clone git@github.com:csids/org.git"
  },
  {
    "objectID": "qmd/200-git-concepts.html#working-directory",
    "href": "qmd/200-git-concepts.html#working-directory",
    "title": "2  Git Concepts",
    "section": "2.3 Working Directory",
    "text": "2.3 Working Directory\nThis is a folder on your local file system. It contains the files that you interact with (i.e. edit, read, and run)."
  },
  {
    "objectID": "qmd/200-git-concepts.html#commit",
    "href": "qmd/200-git-concepts.html#commit",
    "title": "2  Git Concepts",
    "section": "2.4 Commit",
    "text": "2.4 Commit\nA commit is a saved snapshot of your repo at one particular point in time.\nYou may choose to bundle multiple files into a single commit when:\n\nYou would like to update the remote GitHub repo with your local changes. See Section 2.7 for additional discussion.\nWhen you would like to update your local files with changes from the remote GitHub repo. See Section 2.6 for additional discussion.\n\n\n\n\n\n\n\nNote\n\n\n\nRemember that you can only commit changes that have already been staged (i.e. via the git add command)\n\n\ngit commit -m \"Commit message\""
  },
  {
    "objectID": "qmd/200-git-concepts.html#add-staging",
    "href": "qmd/200-git-concepts.html#add-staging",
    "title": "2  Git Concepts",
    "section": "2.5 Add (Staging)",
    "text": "2.5 Add (Staging)\nThe staging area lies between the working directory and the commit.\nOften, you will not want to include all uncommitted changes in a single commit. This is why you must selectively choose which uncommitted changes will be included in the next commit via the add command.\ngit add file1 file2 file3 file4"
  },
  {
    "objectID": "qmd/200-git-concepts.html#sec-pull",
    "href": "qmd/200-git-concepts.html#sec-pull",
    "title": "2  Git Concepts",
    "section": "2.6 Pull",
    "text": "2.6 Pull\nYou update your local copy by pulling new commits from the GitHub repo (also known as syncing)\ngit pull"
  },
  {
    "objectID": "qmd/200-git-concepts.html#sec-push",
    "href": "qmd/200-git-concepts.html#sec-push",
    "title": "2  Git Concepts",
    "section": "2.7 Push",
    "text": "2.7 Push\nYou update the remote GitHub repo by pushing your local commits.\n\n\n\n\n\n\nNote\n\n\n\nYour local repo will need to be up-to-date before you push. This implies that you have pulled (Section 2.6) the latest commits from the remote repo.\n\n\ngit push"
  },
  {
    "objectID": "qmd/200-git-concepts.html#branches",
    "href": "qmd/200-git-concepts.html#branches",
    "title": "2  Git Concepts",
    "section": "2.8 Branches",
    "text": "2.8 Branches\nBranches allow for multiple versions of your repo to exist simultaneously. For our purposes, we will ignore them, with the knowledge that everything we do will be on the ‘main’ branch."
  },
  {
    "objectID": "qmd/300-starting-with-git.html#create-an-account",
    "href": "qmd/300-starting-with-git.html#create-an-account",
    "title": "3  Starting With Git",
    "section": "3.1 Create an Account",
    "text": "3.1 Create an Account\nYou will need an account on your remote Git server.\nDo this https://github.com/join.\n\n\n\n\n\n\nIf your team has a GitHub Organization\n\n\n\nYou will need to provide your team’s administrator with your GitHub username so that they can add you to their GitHub Organization."
  },
  {
    "objectID": "qmd/300-starting-with-git.html#github-desktop",
    "href": "qmd/300-starting-with-git.html#github-desktop",
    "title": "3  Starting With Git",
    "section": "3.2 GitHub Desktop",
    "text": "3.2 GitHub Desktop\n\n3.2.1 Initial Setup\n\nDownload https://desktop.github.com.\nhttps://docs.github.com/en/desktop/installing-and-configuring-github-desktop/installing-and-authenticating-to-github-desktop/authenticating-to-github.\n\n\n\n3.2.2 Cloning a repository\n\n\n\n3.2.3 How to push commits to GitHub\n\nhttps://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/making-changes-in-a-branch/pushing-changes-to-github\n(You can ignore step 3, “Create Pull Request”, because we are only working on the ‘main’ branch)\n\n\n\n3.2.4 How to pull updates from GitHub:\n\nhttps://docs.github.com/en/desktop/contributing-and-collaborating-using-github-desktop/keeping-your-local-repository-in-sync-with-github/syncing-your-branch#pulling-to-your-local-branch-from-the-remote\n(Remember that we are only using the ‘main’ branch)"
  },
  {
    "objectID": "qmd/400-project-organization.html#concepts",
    "href": "qmd/400-project-organization.html#concepts",
    "title": "4  Project Organization",
    "section": "4.1 Concepts",
    "text": "4.1 Concepts\nMost analyses have three main sections:\n\nCode.\nResults.\nData.\n\nYet each of these sections have extremely different requirements.\nCode should:\n\nBe version controlled (I.e. available on GitHub!).\nBe publicly accessible (sometimes).\nHave 1 analysis pipeline that logically and sequentially details all steps of the data cleaning, analysis, and result generation.\n\nResults should:\n\nBe immediately shared with close collaborators.\nHave each set of results saved and accessible, so that you can see how your results have changed over time (i.e. “if we run the code today, do we get similar results to yesterday?”).\n\nData should:\n\nBe encrypted (if sensitive).\nNot stored on the cloud (if sensitive)."
  },
  {
    "objectID": "qmd/400-project-organization.html#suggested-solutions",
    "href": "qmd/400-project-organization.html#suggested-solutions",
    "title": "4  Project Organization",
    "section": "4.2 Suggested solutions",
    "text": "4.2 Suggested solutions\nDetermining appropriate solutions for you and your team is an incremental process that requires input from all team members regarding their particular needs. Here are some suggestions that can be used as a starting point.\n\n4.2.1 The minimalist solution\n\n4.2.1.1 Code\nCode will be located in a private GitHub repo, with access primarily controlled via teams, not via individual accounts.\nThis GitHub repo will not contain:\n\nResults.\nData.\n\nThis code will contain an obvious analysis pipeline that logically and sequentially details all steps of the data cleaning, analysis, and result generation.\nFor example:\n\nOne file:\n\nRun.R\n\nMultiple numbered files:\n\n01_clean_data.R\n02_analyze_data.R\n03_create_graphs.R\n\n\nFunctions will be stored in a folder:\n\nfunctions/\n\n\n\n4.2.1.2 Results\nResults will be stored in a traditional cloud storage service.\n\n\n4.2.1.3 Data\nData will be stored locally."
  }
]